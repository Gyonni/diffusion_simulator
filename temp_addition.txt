

def update_c_time_axes(
    artists: Dict[str, Any],
    t: np.ndarray,
    concentrations_list: list,
    position: float,
) -> None:
    """Update concentration vs time plot with multiple temperature series.

    Args:
        artists: Dictionary of matplotlib artist objects
        t: Time array [s]
        concentrations_list: List of (temperature, concentration_array) tuples
                            or single concentration array (backward compatibility)
        position: The x-position [m] where concentrations were sampled
    """
    ax = artists["ax_c_time"]

    # Clear existing lines
    if "c_time_lines" in artists:
        for line in artists["c_time_lines"]:
            line.remove()
        artists["c_time_lines"] = []
    else:
        artists["c_time_lines"] = []

    # Handle backward compatibility: if concentrations_list is a numpy array
    if isinstance(concentrations_list, np.ndarray):
        concentrations_list = [(None, concentrations_list)]

    # Plot each temperature series
    lines = []
    for temp_value, concentrations in concentrations_list:
        if temp_value is None:
            label = f"x = {position:.3e} m"
        else:
            label = f"T = {temp_value:.1f} K"

        line, = ax.plot(t, concentrations, marker='o', markersize=3, linestyle='-', label=label)
        lines.append(line)

    artists["c_time_lines"] = lines

    # Update title
    ax.set_title(f"Concentration vs Time (at x={position:.3e} m)")

    # Add legend if multiple temperature series
    if len(concentrations_list) > 1:
        ax.legend(loc='best', fontsize=8)
    else:
        # Remove legend if only one series
        if ax.get_legend() is not None:
            ax.get_legend().remove()

    ax.relim()
    ax.autoscale_view()
